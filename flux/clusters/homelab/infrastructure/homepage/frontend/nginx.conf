server {
    listen       8080;
    listen  [::]:8080;
    server_name  localhost;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # ðŸ“Š Prometheus metrics endpoint (proxied to nginx-exporter sidecar in K8s)
    # In local dev, stub_status is exposed directly
    location /metrics {
        access_log off;
        stub_status;
    }

    # ðŸ“ˆ Nginx stub_status for prometheus exporter (internal only in K8s)
    location /stub_status {
        access_log off;
        stub_status;
    }

    # Optimized static assets serving
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp|avif)$ {
        root   /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept";
        
        # Enable WebP serving when supported
        location ~* \.(jpg|jpeg|png)$ {
            root   /usr/share/nginx/html;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept";
            
            # Try to serve WebP version if browser supports it
            try_files $uri.webp $uri =404;
        }
    }

    # CSS and JS files
    location ~* \.(css|js)$ {
        root   /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
    }

    # HTML files - shorter cache for dynamic content
    location ~* \.html$ {
        root   /usr/share/nginx/html;
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }

    # Main location
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
        
        # Add headers for better caching
        add_header Cache-Control "public, max-age=3600";
    }

    # Handle API requests
    location /api {
        proxy_pass http://homepage-bruno-site-api:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add headers for Ollama connection
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        
        # API caching
        proxy_cache_bypass $http_pragma;
        proxy_cache_revalidate on;
        proxy_cache_min_uses 1;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
