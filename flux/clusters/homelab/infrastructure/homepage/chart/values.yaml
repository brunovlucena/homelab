# Default values for bruno-site
# This is a YAML-formatted file.

# Domain configuration
domain: "lucena.cloud"

replicaCount: 1

imagePullSecrets:
  - name: ghcr-secret
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

# API Configuration
api:
  image:
    repository: ghcr.io/brunovlucena/homelab/homepage-api
    pullPolicy: Always
    tag: "latest"
  service:
    type: ClusterIP
    port: 8080
  resources:
    limits:
      cpu: 2000m      # Higher CPU limit for Mac Studio (Golden Rule #8: Vertical Scaling)
      memory: 2Gi     # More memory for better performance
    requests:
      cpu: 500m       # Higher CPU request
      memory: 512Mi   # Higher memory request

# ðŸ¤– Jamie Configuration (AI-powered SRE assistant)
jamie:
  enabled: true
  url: "http://jamie-slack-bot-service.jamie.svc.cluster.local:8080"

# ðŸ¤– Agent SRE Configuration (AI-powered SRE assistant)
agentSRE:
  enabled: true
  url: "http://agent-sre-service.agent-sre.svc.cluster.local:8080"

# Ollama Configuration
ollama:
  enabled: true
  url: "http://ollama:11434"

# MinIO Configuration
minio:
  enabled: true
  endpoint: "minio-service.minio.svc.cluster.local:9000"
  useSSL: false
  bucket: "homepage-assets"
  existingSecret: "bruno-site-secret"  # Unified secret for all credentials

# Frontend Configuration
frontend:
  image:
    repository: ghcr.io/brunovlucena/homelab/homepage-frontend
    pullPolicy: Always
    tag: "latest"
  service:
    type: ClusterIP
    port: 80
  appEnv: "production"
  apiUrl: "/api/v1"
  resources:
    limits:
      cpu: 1000m     # Higher CPU limit for Mac Studio
      memory: 1Gi    # More memory for frontend
    requests:
      cpu: 200m      # Higher CPU request
      memory: 256Mi  # Higher memory request

ingress:
  enabled: false
  className: "nginx"
  hosts:
    - host: lucena.cloud

autoscaling:
  enabled: false  # Disabled for Mac Studio - single node setup
  minReplicas: 1  # Single replica for Mac Studio
  maxReplicas: 3  # Limited scaling for Mac Studio
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# CORS Configuration
corsOrigin: "https://lucena.cloud"

# Cloudflare Configuration
cloudflare:
  enabled: false  # Disabled until sealed secret is created
  zoneId: ""  # Set via Kubernetes secret bruno-site-cloudflare-secret
  apiToken: ""  # Set via Kubernetes secret bruno-site-cloudflare-secret
  domain: "lucena.cloud"
  cacheTtl: 86400  # 24 hours
  existingSecret: "bruno-site-cloudflare-secret"  # Created by Sealed Secrets

# Database configuration
database:
  enabled: true
  type: postgresql
  host: homepage-bruno-site-postgres
  port: 5432
  name: bruno_site
  user: postgres
  password: ""
  existingSecret: "bruno-site-secret"  # Unified secret for all credentials
  migration:
    schedule: "*/5 * * * *"  # Every 5 minutes - runs database migrations
    enabled: true

# PostgreSQL configuration
postgres:
  resources:
    limits:
      cpu: 1500m    # Higher CPU limit for Mac Studio database performance
      memory: 1Gi   # More memory for database caching
    requests:
      cpu: 500m     # Higher CPU request
      memory: 512Mi # Higher memory request
  persistence:
    enabled: true
    size: 20Gi      # Larger storage for Mac Studio
    storageClass: ""

# Redis configuration
redis:
  enabled: true
  host: homepage-bruno-site-redis
  port: 6379
  password: "enabled"  # Set to "enabled" to use the secret
  existingSecret: "bruno-site-secret"  # Unified secret for all credentials
  resources:
    limits:
      cpu: 500m     # Higher CPU limit for Mac Studio Redis performance
      memory: 512Mi # More memory for Redis caching
    requests:
      cpu: 200m     # Higher CPU request
      memory: 256Mi # Higher memory request
  persistence:
    enabled: true
    size: 5Gi       # Larger Redis storage for Mac Studio
    storageClass: ""

# Secrets - These should be provided via external secret management
# DO NOT set actual passwords here - use Kubernetes secrets instead
secrets:
  databasePassword: ""    # Set via Kubernetes secret
  redisPassword: ""       # Set via Kubernetes secret
  minioAccessKey: ""      # Set via Kubernetes secret
  minioSecretKey: ""      # Set via Kubernetes secret

# K6 Load Testing Configuration
k6:
  enabled: true  # Set to true to enable load testing
  parallelism: 1
  arguments: "--out json=results.json --tag test_type=bruno-site --tag scenario=api_load_test"
  runner:
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi

# Monitoring Configuration
monitoring:
  enabled: true
  prometheus:
    enabled: true
    rules:
      enabled: true
    servicemonitor:
      enabled: true
  grafana:
    enabled: true
    dashboard:
      enabled: true
  alertmanager:
    enabled: true
    webhook:
      url: ""  # Set your webhook URL for notifications
    email:
      smtp_host: "localhost"
      smtp_port: 587
      from: "alerts@bruno-site.com"
      to: "sre-team@bruno-site.com"
    slack:
      webhook_url: ""  # Set your Slack webhook URL
      channel: "#bruno-site-alerts"
      icon_emoji: ":bruno-slack:"  # Custom Bruno Slack icon
      icon_url: "https://lucena.cloud/assets/logos/bruno-slack-logo.png"  # Direct link to PNG icon
  
  # Metrics configuration
  metrics:
    enabled: true
    path: /metrics
    port: 8080
    interval: 30s
    timeout: 10s
    basicAuth:
      enabled: false
      username: "admin"
      password: ""  # Set via secret
  
  # Environment and cluster labels
  environment: "production"
  cluster: "default"
  team: "sre"
  application: "bruno-site"
