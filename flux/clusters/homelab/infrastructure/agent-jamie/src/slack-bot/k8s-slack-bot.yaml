# ü§ñ Jamie Slack Bot - Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jamie-slack-bot
  namespace: jamie
  labels:
    app: jamie-slack-bot
    app.kubernetes.io/name: jamie-slack-bot
    app.kubernetes.io/component: chatbot
    app.kubernetes.io/part-of: bruno-site
  annotations:
    pulumi.com/patchForce: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jamie-slack-bot
  template:
    metadata:
      labels:
        app: jamie-slack-bot
        app.kubernetes.io/name: jamie-slack-bot
        app.kubernetes.io/component: chatbot
      annotations:
        prometheus.io/scrape: "false"
    spec:
      imagePullSecrets:
        - name: ghcr-secret
      serviceAccountName: jamie-slack-bot
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: jamie-slack-bot
        image: ghcr.io/brunovlucena/jamie-slack-bot:latest
        imagePullPolicy: Always
        env:
        - name: SLACK_BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: jamie-secrets
              key: SLACK_BOT_TOKEN
        - name: SLACK_APP_TOKEN
          valueFrom:
            secretKeyRef:
              name: jamie-secrets
              key: SLACK_APP_TOKEN
        - name: SLACK_SIGNING_SECRET
          valueFrom:
            secretKeyRef:
              name: jamie-secrets
              key: SLACK_SIGNING_SECRET
        - name: AGENT_SRE_URL
          value: "http://sre-agent-service.agent-sre:8080"
        - name: OLLAMA_URL
          value: "http://192.168.0.16:11434"
        - name: MODEL_NAME
          value: "llama3.2:3b"
        - name: API_HOST
          value: "0.0.0.0"
        - name: API_PORT
          value: "8080"
        - name: LOGFIRE_TOKEN
          valueFrom:
            secretKeyRef:
              name: jamie-secrets
              key: LOGFIRE_TOKEN
              optional: true
        # OpenTelemetry configuration for Alloy collector (dual export)
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://alloy.alloy.svc.cluster.local:4317"
        - name: OTEL_EXPORTER_OTLP_PROTOCOL
          value: "grpc"
        - name: OTEL_EXPORTER_OTLP_INSECURE
          value: "true"
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      restartPolicy: Always
---
# üåê Jamie Slack Bot - Service (REST API)
apiVersion: v1
kind: Service
metadata:
  name: jamie-slack-bot-service
  namespace: jamie
  labels:
    app: jamie-slack-bot
    app.kubernetes.io/name: jamie-slack-bot
    app.kubernetes.io/component: chatbot
spec:
  type: ClusterIP
  selector:
    app: jamie-slack-bot
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP

---
# ü§ñ Jamie Slack Bot - ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jamie-slack-bot
  namespace: jamie
  labels:
    app.kubernetes.io/name: jamie-slack-bot
    app.kubernetes.io/part-of: jamie
    app.kubernetes.io/component: serviceaccount