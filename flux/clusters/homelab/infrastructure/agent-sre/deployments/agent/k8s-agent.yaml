apiVersion: v1
kind: Namespace
metadata:
  name: agent-sre
  labels:
    name: agent-sre
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sre-agent
  namespace: agent-sre
  labels:
    app: sre-agent
    component: agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sre-agent
  template:
    metadata:
      labels:
        app: sre-agent
        component: agent
    spec:
      imagePullSecrets:
        - name: ghcr-secret
      containers:
      - name: sre-agent
        image: ghcr.io/brunovlucena/agent-sre-agent:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: AGENT_PORT
          value: "8080"
        - name: AGENT_HOST
          value: "0.0.0.0"
        - name: MCP_SERVER_URL
          value: "http://sre-agent-mcp-server-service:30120"
        - name: GRAFANA_MCP_URL
          value: "http://localhost:8081"
        - name: OLLAMA_URL
          value: "http://192.168.0.16:11434"
        - name: MODEL_NAME
          value: "llama3.2:3b"
        - name: SERVICE_NAME
          value: "sre-agent"
        - name: LOGFIRE_TOKEN_SRE_AGENT
          valueFrom:
            secretKeyRef:
              name: agent-sre-secrets
              key: LOGFIRE_TOKEN_SRE_AGENT
        - name: LANGSMITH_API_KEY
          valueFrom:
            secretKeyRef:
              name: agent-sre-secrets
              key: LANGSMITH_API_KEY
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
      # ðŸ“Š Grafana MCP sidecar container
      # Provides MCP (Model Context Protocol) access to Grafana for the SRE agent
      # The agent can query dashboards, alerts, and metrics through this MCP server
      # Authentication: Uses Grafana Service Account Token (glsa_*)
      # - name: grafana-mcp
      #   image: mcp/grafana:latest
      #   imagePullPolicy: IfNotPresent
      #   ports:
      #   - containerPort: 8081
      #     name: mcp-http
      #   env:
      #   - name: GRAFANA_URL
      #     value: "https://grafana.lucena.cloud"
      #   # Service Account Token from Grafana (Admin â†’ Service Accounts)
      #   # - name: GRAFANA_API_KEY
      #   #   valueFrom:
      #   #     secretKeyRef:
      #   #       name: agent-sre-secrets
      #   #       key: GRAFANA_SERVICE_ACCOUNT_TOKEN
      #   - name: PORT
      #     value: "8081"
      #   resources:
      #     requests:
      #       memory: "128Mi"
      #       cpu: "100m"
      #     limits:
      #       memory: "256Mi"
      #       cpu: "200m"
      #   livenessProbe:
      #     httpGet:
      #       path: /health
      #       port: 8081
      #     initialDelaySeconds: 30
      #     periodSeconds: 30
      #     timeoutSeconds: 5
      #     failureThreshold: 3
      #     successThreshold: 1
      #   readinessProbe:
      #     httpGet:
      #       path: /health
      #       port: 8081
      #     initialDelaySeconds: 10
      #     periodSeconds: 30
      #     timeoutSeconds: 3
      #     failureThreshold: 3
      #     successThreshold: 1
---
apiVersion: v1
kind: Service
metadata:
  name: sre-agent-service
  namespace: agent-sre
  labels:
    app: sre-agent
    component: agent
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 8081
    targetPort: 8081
    protocol: TCP
    name: grafana-mcp
  selector:
    app: sre-agent
---
apiVersion: v1
kind: Service
metadata:
  name: sre-agent-nodeport
  namespace: agent-sre
  labels:
    app: sre-agent
    component: agent
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 31081
    protocol: TCP
    name: http
  - port: 8081
    targetPort: 8081
    nodePort: 31082
    protocol: TCP
    name: grafana-mcp
  selector:
    app: sre-agent
